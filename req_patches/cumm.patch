diff --git a/include/tensorview/tensor.h b/include/tensorview/tensor.h
index bb5157c..55a2ca2 100644
--- a/include/tensorview/tensor.h
+++ b/include/tensorview/tensor.h
@@ -152,6 +152,19 @@ using all_int_tensor_types_t =
     std::tuple<int8_t, int16_t, int32_t, int64_t, uint8_t, uint16_t, uint32_t,
                uint64_t>;
 
+template <typename T, typename U>
+struct is_convertible : std::is_convertible<T, U> {};
+
+#ifdef TV_CUDA
+template <typename T>
+struct is_convertible<T, __half>: std::is_floating_point<T> {};
+#endif
+
+#if (CUDA_VERSION >= 11000 && defined(TV_CUDA))
+template <typename T>
+struct is_convertible<T, __nv_bfloat16>: std::is_floating_point<T> {};
+#endif
+
 template <typename T> class TensorStorage {
 public:
   TensorStorage(size_t size, int device = -1, bool managed = false,
@@ -1634,7 +1647,7 @@ public:
         //                         type_s<std::decay_t<Tcur>>, "to",
         //                         type_s<std::decay_t<Tdst>>);
         // }
-        if_constexpr<std::is_convertible<Tcur, Tdst>::value>(
+        if_constexpr<detail::is_convertible<Tcur, Tdst>::value>(
             [&](auto _) {
               auto ptr = this->data<Tcur>();
               tensor =
@@ -1817,4 +1830,4 @@ inline Tensor cat_first_axis(std::vector<Tensor> tensors) {
   return res;
 }
 
-} // namespace tv
\ No newline at end of file
+} // namespace tv
